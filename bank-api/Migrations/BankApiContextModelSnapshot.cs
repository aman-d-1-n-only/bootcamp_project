// <auto-generated />
using BankApi.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace bank_api.Migrations
{
    [DbContext(typeof(BankApiContext))]
    partial class BankApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("BankApi.Models.Account", b =>
                {
                    b.Property<int>("a_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("acc_no")
                        .HasColumnType("INTEGER");

                    b.Property<int>("c_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("creditFields")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("currentBalance")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("fname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("lname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("a_id");

                    b.HasIndex("c_id");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("BankApi.Models.Admin", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("BankApi.Models.Customer", b =>
                {
                    b.Property<int>("c_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("balance")
                        .HasColumnType("REAL");

                    b.Property<long>("card_no")
                        .HasColumnType("INTEGER");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("contact")
                        .HasColumnType("INTEGER");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("fname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("lname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("pin")
                        .HasColumnType("INTEGER");

                    b.HasKey("c_id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("BankApi.Models.Account", b =>
                {
                    b.HasOne("BankApi.Models.Customer", "customer")
                        .WithMany("Account")
                        .HasForeignKey("c_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer");
                });

            modelBuilder.Entity("BankApi.Models.Customer", b =>
                {
                    b.Navigation("Account");
                });
#pragma warning restore 612, 618
        }
    }
}
